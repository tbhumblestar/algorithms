#그리디 알고리즘
"""
탐욕적인 선택들이 만들어낼 수 없는 결과를 탐욕적이지 않는 선택들도 만들어낼 수 없다는 것을 증명하면 됨. 그러면 굳이 탐욕적이지 않은 선택을 할 필요가 없으니까
"""

#정당성 검토

"""
?
"""

#풀이법 요약

"""
-받은 값을 오름차순으로 정렬
-오름차순으로 정렬된 수를 앞에서부터 더해간다고 하자. '먼저 뽑혀서 더해진 수들의 합 + 1'이 새로 더해질 수보다 작지 않다면, 새로 더해진 수까지 모든 수를 만들어낼 수 있다는 말이 된다
-예를 들어, 1,2,3,7이 있다고 하면 3에서 7로 넘어갈 때 6+1 은 7보다 작지 않다. 즉 6에서 만들 수 없는 숫자 없이 7로 넘어갈 수 잇고, 7부터는 기존에 만들어졌던 수들(1,2,3,4,5,6)이 더해질 수 있으므로 결국 6 + 7 까지는 모든 수를 만들 수 잇음
-다르게 말하면, 기존에 만들 수 있었던 모든 수들(1,2,3,4,5,6)의 시작점에 새로운 수가 더해지는 느낌(1+7,2+7,3+7,4+7,5+7,6+7)
-결국 기존의 모든 수들을 더해, 다음에 더해지는 수로 빈 자연수 없이 이어질 수 있느냐 없느냐를 체크하는 것
-이어질 수 없을 때, 기존의 수들과 다음에 더해지는 수 사이의 빈 자연수들 중 최소값을 구하는 것임
"""


n= int(input())
num_list = list(map(int,input().split()))
num_list.sort()
print(num_list)

test = 0
for num in num_list:
    if test + 1 < num:
        break
    else:
        test += num
    print(test+1)